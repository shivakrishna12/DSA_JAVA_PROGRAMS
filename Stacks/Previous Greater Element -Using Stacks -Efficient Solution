package Stacks;

import java.util.ArrayDeque;
import java.util.Arrays;

public class PreviousGreaterElement {
	public static void main(String[] args) {
		int[] nums = new int[] { 15, 10, 18, 12, 4, 6, 2, 8 };
		int[] array = getPreviousGreaterElement(nums);
		System.out.println(Arrays.toString(array));
	}

	public static int[] getPreviousGreaterElement(int[] arr) {
		ArrayDeque<Integer> stack = new ArrayDeque<Integer>();
		int[] previousArray = new int[arr.length];
		for (int i = 0; i < arr.length; i++) {
			if (i == 0) {
				stack.push(arr[i]);
				previousArray[i] = -1;
			} else {
				while (stack.isEmpty() == false && stack.peek() <= arr[i]) {
					stack.pop();
				}
				int prevousGreater = stack.isEmpty() ? -1 : stack.peek();
				stack.push(arr[i]);
				previousArray[i] = prevousGreater;
			}
		}
		return previousArray;
	}
}
